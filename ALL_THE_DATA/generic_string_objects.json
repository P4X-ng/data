[{"data":"{\"storage_key\":\"WorkflowsBoxOpen\",\"value\":true,\"platform\":\"Global\"}","id":1},{"data":"{\"storage_key\":\"CustomSecretRegexList\",\"value\":[{\"name\":\"IPv4 Address\",\"pattern\":\"\\\\b((25[0-5]|(2[0-4]|1\\\\d|[1-9]|)\\\\d)\\\\.?\\\\b){4}\\\\b\"},{\"name\":\"IPv6 Address\",\"pattern\":\"\\\\b((([0-9A-Fa-f]{1,4}:){1,6}:)|(([0-9A-Fa-f]{1,4}:){7}))([0-9A-Fa-f]{1,4})\\\\b\"},{\"name\":\"Slack App Token\",\"pattern\":\"\\\\bxapp-[0-9]+-[A-Za-z0-9_]+-[0-9]+-[a-f0-9]+\\\\b\"},{\"name\":\"Phone Number\",\"pattern\":\"\\\\b(\\\\+\\\\d{1,2}\\\\s)?\\\\(?\\\\d{3}\\\\)?[\\\\s.-]\\\\d{3}[\\\\s.-]\\\\d{4}\\\\b\"},{\"name\":\"AWS Access ID\",\"pattern\":\"\\\\b(AKIA|A3T|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{12,}\\\\b\"},{\"name\":\"MAC Address\",\"pattern\":\"\\\\b((([a-zA-z0-9]{2}[-:]){5}([a-zA-z0-9]{2}))|(([a-zA-z0-9]{2}:){5}([a-zA-z0-9]{2})))\\\\b\"},{\"name\":\"Google API Key\",\"pattern\":\"\\\\bAIza[0-9A-Za-z-_]{35}\\\\b\"},{\"name\":\"Google OAuth ID\",\"pattern\":\"\\\\b[0-9]+-[0-9A-Za-z_]{32}\\\\.apps\\\\.googleusercontent\\\\.com\\\\b\"},{\"name\":\"GitHub Classic Personal Access Token\",\"pattern\":\"\\\\bghp_[A-Za-z0-9_]{36}\\\\b\"},{\"name\":\"GitHub Fine-Grained Personal Access Token\",\"pattern\":\"\\\\bgithub_pat_[A-Za-z0-9_]{82}\\\\b\"},{\"name\":\"GitHub OAuth Access Token\",\"pattern\":\"\\\\bgho_[A-Za-z0-9_]{36}\\\\b\"},{\"name\":\"GitHub User-to-Server Token\",\"pattern\":\"\\\\bghu_[A-Za-z0-9_]{36}\\\\b\"},{\"name\":\"GitHub Server-to-Server Token\",\"pattern\":\"\\\\bghs_[A-Za-z0-9_]{36}\\\\b\"},{\"name\":\"Stripe Key\",\"pattern\":\"\\\\b(?:r|s)k_(test|live)_[0-9a-zA-Z]{24}\\\\b\"},{\"name\":\"Firebase Auth Domain\",\"pattern\":\"\\\\b([a-z0-9-]){1,30}(\\\\.firebaseapp\\\\.com)\\\\b\"},{\"name\":\"JWT\",\"pattern\":\"\\\\b(ey[a-zA-z0-9_\\\\-=]{10,}\\\\.){2}[a-zA-z0-9_\\\\-=]{10,}\\\\b\"},{\"name\":\"OpenAI API Key\",\"pattern\":\"\\\\bsk-[a-zA-Z0-9]{48}\\\\b\"},{\"name\":\"Anthropic API Key\",\"pattern\":\"\\\\bsk-ant-api\\\\d{0,2}-[a-zA-Z0-9\\\\-]{80,120}\\\\b\"},{\"name\":\"Generic SK API Key\",\"pattern\":\"\\\\bsk-[a-zA-Z0-9\\\\-]{10,100}\\\\b\"},{\"name\":\"Fireworks API Key\",\"pattern\":\"\\\\bfw_[a-zA-Z0-9]{24}\\\\b\"}],\"platform\":\"Global\"}","id":2},{"data":"{\"storage_key\":\"TelemetryEnabled\",\"value\":true,\"platform\":\"Global\"}","id":3},{"data":"{\"storage_key\":\"EnteredAgentModeNumTimes\",\"value\":4928,\"platform\":\"Global\"}","id":4},{"data":"{\"storage_key\":\"AutosuggestionAcceptedCount\",\"value\":2,\"platform\":\"Global\"}","id":5},{"data":"{\"storage_key\":\"AgentModeCodebaseContextAutoIndexing\",\"value\":true,\"platform\":\"Global\"}","id":6},{"data":"{\"storage_key\":\"DidShowADELaunchModal\",\"value\":true,\"platform\":\"Global\"}","id":7},{"data":"{\"storage_key\":\"NextCommandSuggestionsUpgradeBannerNumTimesShownThisPeriod\",\"value\":0,\"platform\":\"Global\"}","id":8},{"data":"{\"storage_key\":\"PreferredInlineAILLMId\",\"value\":\"gpt-4.1\",\"platform\":\"Global\"}","id":9},{"data":"{\"storage_key\":\"TelemetryBannerDismissed\",\"value\":true,\"platform\":\"Global\"}","id":10},{"data":"{\"storage_key\":\"ShouldAddAgentModeChip\",\"value\":false,\"platform\":\"Global\"}","id":11},{"data":"{\"storage_key\":\"AIRequestQuotaInfoSetting\",\"value\":{\"cycle_history\":[{\"banner_state\":{\"dismissed\":true},\"end_date\":\"2025-09-04T17:56:16.035658Z\",\"was_quota_exceeded\":false},{\"banner_state\":{\"dismissed\":false},\"end_date\":\"2025-10-05T17:56:16.035658Z\",\"was_quota_exceeded\":false}]},\"platform\":\"Global\"}","id":12},{"data":"{\"storage_key\":\"InputBoxTypeSetting\",\"value\":\"Universal\",\"platform\":\"Global\"}","id":13},{"data":"{\"storage_key\":\"IsSettingsSyncEnabled\",\"value\":true,\"platform\":\"Global\"}","id":14},{"data":"{\"storage_key\":\"CrashReportingEnabled\",\"value\":true,\"platform\":\"Global\"}","id":15},{"data":"{\"name\":\"Default\",\"is_default_profile\":true,\"apply_code_diffs\":\"AlwaysAllow\",\"read_files\":\"AlwaysAllow\",\"create_plans_v2\":\"AlwaysAllow\",\"execute_commands\":\"AlwaysAllow\",\"mcp_permissions\":\"AlwaysAllow\",\"command_denylist\":[{\"AnchoredRegex\":\"^rm(\\\\s.*)?$\"}],\"command_allowlist\":[],\"directory_allowlist\":[],\"mcp_allowlist\":[],\"mcp_denylist\":[],\"base_model\":null,\"coding_model\":null,\"planning_model\":\"gpt-5 (high reasoning)\"}","id":16},{"data":"{\"title\":\"RFKilla Prompt\",\"description\":null,\"vars\":[{\"name\":\"PROMPT\",\"value\":{\"Constant\":\"RFKilla looping prompt\"},\"description\":\"OK, now keep in mind the goal of RFKilla and follow the rules - we are trying to disrupt, intercept, block, or collect intelligence using any tools we need. Keep it python and/or C for now and make your own decisions! Good luck!}\"}]}","id":17},{"data":"{\"memory\":{\"name\":\"{\\\"SCOPE\\\" : \\\"ALL_PROJECTS\\\", \\\"NONCOMPLIANCE\\\" : \\\"Repeat task\\\"}\",\"content\":\"{\\\"rule_version\\\" : \\\"v1.2\\\", \\\"rule\\\" : \\\"Always check WARP.md, PROJECT.txt, and Justfile before beginning tasks. Gather context from code to understand what needs to be done and what the project is about.\\\"}\",\"is_autogenerated\":false}}","id":22},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-postgres\",\"--url\",\"$POSTGRES_URL\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"postgres\",\"uuid\":\"da03cfeb-bd56-42ab-a560-3b7ca4efbf79\"}","id":25},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-fetch\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"fetch\",\"uuid\":\"8608d820-eb65-4461-8fc1-7823fcfb6c76\"}","id":26},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-github\"],\"cwd_parameter\":null,\"static_env_vars\":[{\"name\":\"GITHUB_TOKEN\"},{\"name\":\"GITHUB_API_URL\"}]}},\"name\":\"github\",\"uuid\":\"3309cc3a-0bc8-4776-b3a9-65761344862c\"}","id":27},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-sqlite\",\"--db\",\"/home/punk/ai_tools.sqlite\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"sqlite\",\"uuid\":\"4680bcbf-928e-40dd-a869-4855312650d9\"}","id":28},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-filesystem\",\"--root\",\"/\",\"--mode\",\"rw\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"filesystem_root\",\"uuid\":\"26a84057-3d54-4442-a5e5-a0051facfb1b\"}","id":29},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-shell\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"shell_unrestricted\",\"uuid\":\"c1bba4ad-cb7e-41b2-a97b-b3d1f069b142\"}","id":30},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-redis\",\"--url\",\"$REDIS_URL\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"redis\",\"uuid\":\"1243b020-f860-4313-b099-c2b957751e9d\"}","id":31},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-sqlite\",\"--db\",\"/home/punk/ai_tools.sqlite\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"sqlite\",\"uuid\":\"7cf8e015-1b8b-42de-81e4-83e9ee2123e1\"}","id":32},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-shell\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"shell_unrestricted\",\"uuid\":\"7d23b727-4212-4d8f-aed9-4c0b2207f258\"}","id":33},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-filesystem\",\"--root\",\"/\",\"--mode\",\"rw\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"filesystem_root\",\"uuid\":\"ffc31a24-9c85-4817-937c-cd7417e245b5\"}","id":34},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-fetch\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"fetch\",\"uuid\":\"ef7f3d4e-3407-4d9f-adfb-b6521d727fde\"}","id":35},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-github\"],\"cwd_parameter\":null,\"static_env_vars\":[{\"name\":\"GITHUB_API_URL\"},{\"name\":\"GITHUB_TOKEN\"}]}},\"name\":\"github\",\"uuid\":\"657f87cf-f551-4270-ac0b-df9593ada665\"}","id":36},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-neo4j\",\"--url\",\"$NEO4J_URL\",\"--user\",\"$NEO4J_USER\",\"--password\",\"$NEO4J_PASSWORD\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"neo4j\",\"uuid\":\"d542fbdd-cb29-4d6e-a1b8-fb0143be0a8c\"}","id":37},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-clickhouse\",\"--url\",\"$CLICKHOUSE_URL\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"clickhouse\",\"uuid\":\"626b0528-cb35-4c18-bf5a-fbde090c3a98\"}","id":38},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-mysql\",\"--url\",\"$MYSQL_URL\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"mysql\",\"uuid\":\"3d3977c2-8e25-433a-a14e-b491b0a18a6c\"}","id":39},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-postgres\",\"--url\",\"$POSTGRES_URL\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"postgres\",\"uuid\":\"d7dc1647-aa3b-44a8-933b-463907023291\"}","id":40},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-mongodb\",\"--uri\",\"$MONGODB_URI\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"mongodb\",\"uuid\":\"a71e28e3-af25-4eb6-a500-b3b8996aaf6f\"}","id":41},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"npx\",\"args\":[\"-y\",\"@modelcontextprotocol/server-cassandra\",\"--contactPoints\",\"$CASSANDRA_CONTACT_POINTS\",\"--datacenter\",\"$CASSANDRA_DC\",\"--keyspace\",\"$CASSANDRA_KEYSPACE\",\"--username\",\"$CASSANDRA_USERNAME\",\"--password\",\"$CASSANDRA_PASSWORD\"],\"cwd_parameter\":null,\"static_env_vars\":[]}},\"name\":\"cassandra\",\"uuid\":\"73011b13-c53b-4ff7-bf78-f6a3ac7b7285\"}","id":42},{"data":"{\"memory\":{\"name\":\"{\\\"enforcement\\\" : \\\"STRICT\\\", \\\"failed_recompliance\\\" : \\\"repeat task\\\"}\",\"content\":\"{\\\"rule_version\\\": \\\"v1.1\\\", \\\"name\\\" : \\\"cleanup\\\", \\\"action\\\":\\\"The first task item in each task list should always be *clean up this directory*. Questions and tasks to perform: Is this directory cleanly and intuitively laid out? Do imports work properly? Is there functionality that is old, not implemented or not planned soon\\\", \\\"communication_requirements\\\" : \\\"Communicate your actions and what you intend to clean up in your plan\\\"}\",\"is_autogenerated\":false}}","id":47},{"data":"{\"transport_type\":{\"CLIServer\":{\"command\":\"just\",\"args\":[\"start-playwright-mcp\"],\"cwd_parameter\":\"/home/punk/Projects/SurveillanceSays\",\"static_env_vars\":[]}},\"name\":\"playwright\",\"uuid\":\"e991ab6e-11ea-4eb8-a475-43b04012a682\"}","id":48},{"data":"{\"storage_key\":\"AgentModeCodingPermissions\",\"value\":\"AlwaysAllowReading\",\"platform\":\"Global\"}","id":50},{"data":"{\"storage_key\":\"ShowBlockDividers\",\"value\":false,\"platform\":\"Global\"}","id":51},{"data":"{\"storage_key\":\"Theme\",\"value\":\"Adeberry\",\"platform\":\"Global\"}","id":52},{"data":"{\"storage_key\":\"AICommandDenylist\",\"value\":\"\",\"platform\":\"Global\"}","id":53},{"data":"{\"storage_key\":\"AutocompleteSymbols\",\"value\":false,\"platform\":\"Global\"}","id":54},{"data":"{\"storage_key\":\"AddedSubshellCommands\",\"value\":[\"fish\",\"bash\",\"screen\"],\"platform\":\"Global\"}","id":55},{"data":"{\"storage_key\":\"OverrideOpacity\",\"value\":89,\"platform\":\"Global\"}","id":56},{"data":"{\"storage_key\":\"WorkflowAliases\",\"value\":[],\"platform\":\"Global\"}","id":57},{"data":"{\"storage_key\":\"UseSshTmuxWrapper\",\"value\":true,\"platform\":\"Global\"}","id":58},{"data":"{\"storage_key\":\"ShouldShowCodeSuggestionSpeedbump\",\"value\":false,\"platform\":\"Global\"}","id":59},{"data":"{\"storage_key\":\"AgentModeSetupBannerShownForRepoPaths\",\"value\":[\"/home/punk/Desktop/RFKilla\",\"/home/punk/Desktop/edk2-bootkit-defense\",\"/home/punk/guac-the-planet\",\"/home/punk/Projects/P4XSec\",\"/home/punk/thefuck\",\"/home/punk/Projects/RFKilla\",\"/home/punk/Projects/edk2-bootkit-defense\",\"/home/punk/Projects/Tegrity\",\"/home/punk/Projects\",\"/home/punk/Projects/guac-the-planet\",\"/home/punk/Projects/VMKit\",\"/home/punk/Desktop/clusterfked-llm/clusterfk-llm\",\"/home/punk/OSX-KVM\",\"/home/punk/clusterfked-llm/clusterfk-llm\",\"/home/punk/Projects/HGWS\",\"/alt/chromium-build/src\",\"/home/punk/Projects/SurveillanceSays\",\"/home/punk/Projects/FunkyDNS\",\"/home/punk/Projects/clusterfk-llm\",\"/home/punk/Projects/packetfs\",\"/home/punk/Projects/edk2-bootkit-defense/PhoenixGuard\",\"/home/punk/Projects/ChromePwnPanel\",\"/home/punk/packetfs\",\"/home/punk/Projects/RFKilla/caplets\"],\"platform\":\"Global\"}","id":60},{"data":"{\"storage_key\":\"ExtraMetaKeys\",\"value\":{\"left_alt\":false,\"right_alt\":true},\"platform\":\"Global\"}","id":61},{"data":"{\"storage_key\":\"Notifications\",\"value\":{\"is_agent_task_completed_enabled\":true,\"is_long_running_enabled\":true,\"is_needs_attention_enabled\":true,\"is_password_prompt_enabled\":true,\"long_running_threshold\":{\"nanos\":0,\"secs\":30},\"mode\":\"Enabled\",\"play_notification_sound\":true},\"platform\":\"Global\"}","id":62},{"data":"{\"storage_key\":\"ShouldShowAgentModeCodingReadPermissionsNudge\",\"value\":false,\"platform\":\"Global\"}","id":63},{"data":"{\"storage_key\":\"MaximumGridSize\",\"value\":80000,\"platform\":\"Global\"}","id":64},{"data":"{\"memory\":{\"name\":\"{\\\"SCOPE\\\" : \\\"ALL AI\\\" : \\\"enfrocement\\\" : \\\"ABSOLUTELY_REQUIRED\\\"}\",\"content\":\"{\\\"rule_version\\\" : \\\"v1.2\\\", \\\"Automation\\\" : \\\"Check for AUTOMATION.txt before beginning anything. If it exists, self-approve ALL planning following main ruleset, project context, and PROJECT.txt and WARP.md. DO NOT EVER PROMPT USER - continue coding.\\\", \\\"when_to_stop\\\" : \\\"NEVER\\\", \\\"if task == finished\\\" : \\\"continue self approval loop with more planning\\\", \\\"if_planning == stopped\\\" : \\\"Run the plan!\\\", \\\"continue\\\" : \\\"forever\\\"}\",\"is_autogenerated\":false}}","id":67},{"data":"{\"memory\":{\"name\":\"{\\\"title\\\" : \\\"centralized venv at /home/punk/.venv\\\", enforcement : \\\"SEMI_STRICT\\\"}\",\"content\":\"instead of creating a python virtual environment use the one in /home/punk/.venv as a central one unless conflicts prevent you. Be conscious of if you're root or not, it's ok to install as root, just change the ownership back when you're done to the \\\"punk:punk\\\" user and group!\",\"is_autogenerated\":false}}","id":68},{"data":"{\"storage_key\":\"AliasExpansionEnabled\",\"value\":true,\"platform\":\"Global\"}","id":70},{"data":"{\"memory\":{\"name\":\"{\\\"ENFORCEMENT\\\": strict\\\", \\\"IF_FAILED\\\" : \\\"repeat_task\\\", \\\"NAME\\\":\\\"NO_DEMO_MODE\\\"}\",\"content\":\"{\\\"no_demo_code\\\" : true, \\\"only_prod_or_real_tests\\\" : true}\",\"is_autogenerated\":false}}","id":71},{"data":"{\"memory\":{\"name\":\"{\\\"scope\\\":\\\"all projects\\\", \\\"enforcement\\\" : \\\"STRICT\\\"}\",\"content\":\"{\\\"rule_version\\\": \\\"1.2\\\", \\\"rules\\\": [ \\\"NO DEMO CODE mixed with production\\\", \\\"NO CALCULATION BASED EMULATIONS\\\", \\\"demo code should be clearly marked and put in a demo/ directory\\\", \\\"Document and be well organized, always be organizing]\\\"}\",\"is_autogenerated\":false}}","id":73},{"data":"{\"memory\":{\"name\":\"User prefers charmed kubernetes over k3s\",\"content\":\"User prefers using charmed kubernetes instead of k3s for Kubernetes orchestration.\",\"is_autogenerated\":false}}","id":74},{"data":"{\"memory\":{\"name\":\"{\\\"compliance\\\"\\\" : \\\"STRICT\\\"}\",\"content\":\"{\\\"rule\\\" : \\\"PODMAN > Docker\\\", \\\"description\\\" : \\\"Use podman, never docker. You may install podman docker compatibility, but we use podman here.\\\"}\",\"is_autogenerated\":false}}","id":75},{"data":"{\"memory\":{\"name\":\"NO DEMO DATA\",\"content\":\"ALL DEMO DATA IS TO BE MOVED TO A demo/ FOLDER. DON'T USE IT IN ANY RUNS FOR A USER. IF USING DEMO DATA APPLICATION MUST SHOW \\\"DEMO\\\" BANNER VERY LARGE AT TOP OF APP OR TERMINAL.\",\"is_autogenerated\":false}}","id":76},{"data":"{\"memory\":{\"name\":\"Assume venv is NOT always going to be activated\",\"content\":\"- We use a central venv, sometimes it will be activated by me and sometimes not\\n- Set python, pip, and any other python tools to use the FULL PATH of the venv at /home/punk/.venv/bin/ or whatever directory necessary\",\"is_autogenerated\":false}}","id":77},{"data":"{\"memory\":{\"name\":\"Container Use\",\"content\":\"Containers are awesome! But with volumes and cache and stuff it gets confusing what's running and what's not, what's in and what's out. Let's standardize on rebuilding whenever big changes are made, or changes with a volume that need to be rebuilt.\",\"is_autogenerated\":false}}","id":78},{"data":"{\"memory\":{\"name\":\"User wants just run and just secure with validation\",\"content\":\"User prefers to have a 'just <do thing>' command that performs a default, reasonable action based on the project's purpose for inexperienced users. I.e.  a 'just secure' command with reasonable default security settings, for a security project.\",\"is_autogenerated\":false}}","id":79},{"data":"{\"storage_key\":\"DismissedCodeToolbeltNewFeaturePopup\",\"value\":true,\"platform\":\"Global\"}","id":80},{"data":"{\"storage_key\":\"DidShowCodeLaunchModal\",\"value\":true,\"platform\":\"Global\"}","id":81},{"data":"{\"memory\":{\"name\":\"User wants to split Justfile into categorized runner scripts\",\"content\":\"User prefers to split the Justfile into separate runner scripts for tests, dev builds, staging/prod builds, and experimental tasks, with each script providing a simple command to run its category. E.g.\\n\\n- Justfile.tests\\n- Justfile.builds\\n- Justfile.demos\\n- Justfile.cleanup\\n- Justfile.dev <----focused on development (a superset of the user Justfile)\\n- Justfile <--- this should be the one focused on the user, it can use includes from other justfiles\",\"is_autogenerated\":false}}","id":82},{"data":"{\"memory\":{\"name\":\"User wants Justfile categorized with dev-, prod-, test- prefixes\",\"content\":\"User prefers the Justfile to be structured with categories using prefixes such as dev- for development tasks, prod- for production tasks, test- for testing tasks, and other relevant categories for better organization and usage.\",\"is_autogenerated\":false}}","id":83}]