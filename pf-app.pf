# pf-app.pf â€” simple app lifecycle (Podman Compose)
# Usage:
#   ./pf.py up                 # bring stack up (compose up -d)
#   ./pf.py down               # bring stack down (compose down)
#   REMOVE_VOLUMES=1 ./pf.py down   # also remove volumes
#   ./pf.py rebuild            # build (no cache) and recreate containers
# Env:
#   COMPOSE_FILE (default: docker-compose.yml)

# Helper: pick Podman Compose command
# Prefer `podman compose`, fallback to `podman-compose`

# --- up ---
 task up
  describe Bring PacketFS app stack up (Podman Compose)
  shell bash -lc '
    set -euo pipefail;
    CF="${COMPOSE_FILE:-docker-compose.yml}";
    if [ ! -f "$CF" ]; then echo "compose file not found: $CF" >&2; exit 2; fi;
    if command -v podman >/dev/null 2>&1 && podman compose --help >/dev/null 2>&1; then
      exec podman compose -f "$CF" up -d
    elif command -v podman-compose >/dev/null 2>&1; then
      exec podman-compose -f "$CF" up -d
    else
      echo "podman compose/podman-compose not found" >&2; exit 1;
    fi'
 end

# --- down ---
 task down
  describe Bring PacketFS app stack down (Podman Compose)
  shell bash -lc '
    set -euo pipefail;
    CF="${COMPOSE_FILE:-docker-compose.yml}";
    if [ ! -f "$CF" ]; then echo "compose file not found: $CF" >&2; exit 2; fi;
    RV="${REMOVE_VOLUMES:-}"; VFLAG=""; [ -n "$RV" ] && VFLAG="-v";
    if command -v podman >/dev/null 2>&1 && podman compose --help >/dev/null 2>&1; then
      exec podman compose -f "$CF" down $VFLAG
    elif command -v podman-compose >/dev/null 2>&1; then
      exec podman-compose -f "$CF" down $VFLAG
    else
      echo "podman compose/podman-compose not found" >&2; exit 1;
    fi'
 end

# --- rebuild ---
 task rebuild
  describe Rebuild images (no-cache) and recreate containers (Podman Compose)
  shell bash -lc '
    set -euo pipefail;
    CF="${COMPOSE_FILE:-docker-compose.yml}";
    if [ ! -f "$CF" ]; then echo "compose file not found: $CF" >&2; exit 2; fi;
    if command -v podman >/dev/null 2>&1 && podman compose --help >/dev/null 2>&1; then
      podman compose -f "$CF" build --no-cache;
      exec podman compose -f "$CF" up -d --force-recreate
    elif command -v podman-compose >/dev/null 2>&1; then
      podman-compose -f "$CF" build --no-cache;
      exec podman-compose -f "$CF" up -d --force-recreate
    else
      echo "podman compose/podman-compose not found" >&2; exit 1;
    fi'
 end
