"use strict";(self["webpackChunkdesktop_wallet"]=self["webpackChunkdesktop_wallet"]||[]).push([[522],{87349:function(e,t,o){o.r(t),o.d(t,{default:function(){return d}});var s=function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"flex flex-col px-14 relative token-details-view"},[t("top-bar",{staticClass:"-mx-14",attrs:{title:e.token.name},scopedSlots:e._u([{key:"action",fn:function(){return[t("button",{attrs:{type:"button"},on:{click:e.removeCustomToken}},[t("i",{staticClass:"font-normal icon-delete text-brand-primary"})])]},proxy:!0}])}),t("token-form",{staticClass:"flex-grow",attrs:{"token-data":e.token},on:{tokenFormCancelled:e.back,tokenFormConfirmed:e.tokenUpdateConfirmed}}),t("multi-purpose-popup",{ref:"tokenPopup"})],1)},r=[],n=o(42514),i=o(39709),a=o(69986),p=o(20144),c=o(25108),u=p.ZP.extend({name:"TokenDetails",components:{MultiPurposePopup:n.Z,TokenForm:i.Z,TopBar:a.Z},computed:{token(){return this.$route.params.token},tokenPopup(){return this.$refs.tokenPopup}},methods:{back(){this.$router.back()},removeCustomToken(){const{name:e}=this.token,t=this.tokenPopup;t.show({cancelButtonTitle:this.$t("general.cancel"),description:this.$t("views.networksView.deleteTokenPopupDescription",{tokenName:e}),title:this.$t("views.networksView.deleteTokenPopupTitle")}),t.$once("popupConfirmed",this.removeCustomTokenConfirmed)},async removeCustomTokenConfirmed(){const{address:e,chain:t,name:o}=this.token,s=o,r=this.tokenPopup;this.showLoader(),await this.$store.dispatch("removeCustomToken",{address:e,chain:t}).then((()=>{this.showSuccess(),r.$once("popupConfirmed",this.back)})).catch((t=>{c.error(`Error during custom token ${s} remove: ${t}`),this.$errorReporter.reportError(t,{extraData:{tokenAddress:e,tokenName:s}}),this.showError()}))},showError(e){const t=this.tokenPopup;t.show({description:e||this.$t("errors.generic.somethingWentWrong"),popupType:"error"})},showLoader(){const e=this.tokenPopup;e.show({description:this.$t("components.popovers.savingChanges"),popupType:"loader"})},showSuccess(){const e=this.tokenPopup;e.show({popupType:"success",title:this.$t("general.success")})},async tokenUpdateConfirmed(e){this.showLoader(),await this.$store.dispatch("updateCustomToken",e).then((e=>{e&&this.showSuccess()})).catch((t=>{c.error(`Error during custom chain update ${e.name}: ${t}`),this.$errorReporter.reportError(t,{extraData:{tokenName:e.name}}),this.showError()}))}}}),h=u,k=o(1001),l=(0,k.Z)(h,s,r,!1,null,null,null),d=l.exports}}]);