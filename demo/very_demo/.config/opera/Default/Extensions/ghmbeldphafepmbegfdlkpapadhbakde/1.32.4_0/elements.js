(()=>{"use strict";let t="data-protonpass-role",e=[t,"data-protonpass-theme","aria-hidden","popover"],s=HTMLElement===HTMLElement.prototype.constructor?HTMLElement:HTMLElement.prototype.constructor;class n extends s{mutationObs=null;attrsMutationCount=new Map;connectedCallback(){this.mutationObs=new MutationObserver(t=>{for(let{type:s,attributeName:n}of t)if("attributes"===s&&n&&!e.includes(n)){let t=this.attrsMutationCount.get(n)??0;this.attrsMutationCount.set(n,t+1),this.removeAttribute(n),t>25&&(e.push(n),this.attrsMutationCount.delete(n))}}),this.mutationObs.observe(this,{attributes:!0,childList:!1})}disconnectedCallback(){this.mutationObs?.disconnect()}}class o extends n{static getTagName=t=>`protonpass-control-${t}`;connectedCallback(){super.connectedCallback(),this.setAttribute(t,"icon")}}class a extends n{static getTagName=t=>`protonpass-root-${t}`;disconnectedCallback(){super.disconnectedCallback(),requestIdleCallback(()=>{let t=new CustomEvent("PassRootRemoved",{bubbles:!0});this.dispatchEvent(t)})}connectedCallback(){super.connectedCallback(),this.setAttribute(t,"root")}}((t,e,s)=>globalThis.exportFunction?.(t,e,s)??(e[s.defineAs]=t))(t=>{let e={define:(customElements.define===CustomElementRegistry.prototype.define?customElements.define:CustomElementRegistry.prototype.define).bind(customElements),get:(customElements.get===CustomElementRegistry.prototype.get?customElements.get:CustomElementRegistry.prototype.get).bind(customElements)},s=a.getTagName(t),n=o.getTagName(t);e.get(s)||e.define(s,a),e.get(n)||e.define(n,o),delete window.registerPassElements},window,{defineAs:"registerPassElements"})})();
